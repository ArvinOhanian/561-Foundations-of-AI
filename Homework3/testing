graph = {0: [1, 2], 1: [2], 2: [4], 3: [1, 2]}

def graph(content):#takes readlines of file input.txt and returns a dictionary with all nodes and branches
    final_dic = []
    nodes = int(content[4])
    
    #for line in range(4):
        
    for node in range(nodes):
        content.index(node)
        
def To_Int(string):#Turns a string into an int list as long as the OG string has a number every other index ex. String = ["1 2 3"]
    Position = []
    count = 0
    for number in string:
        if(count%2 == 0):
            Position.append(int(string[count]))
        count+=1
    
    return Position
   

def All_Nodes_to_Int(string_nodes):#takes a list of string nodes and converts to int
    num_nodes = int(string_nodes[0])#takes first line read which indicates how many nodes there are
    for node in range(num_nodes):
        To_Int(string_nodes[node + 1])
          
def Move(Loc1, Loc2):#adds two lists element wise. Lists must be same dimenions and only one row
    Loc3 = []
    for i in range(0, len(Loc1)):
        Loc3.append(Loc1[i] + Loc2[i]) 
    return Loc3

        
file1 = open(r'C:\Users\arvin\Documents\Example.txt', 'r')
content = file1.read().split("\n")
#content_lines = file1.readlines()
#only_nodes_string = content_lines[4:]

#only_nodes_int = only_nodes_string[4:].split("\n")
#score_ints = [ int(x) for x in only_nodes.split() ]
nodes = content[4:]

for i in nodes:
    print(nodes[i])
    #nodes_num = To_Int(nodes[node])
    
final = Move(nodes[2], [0,1,1, 1])
#print(All_Nodes_to_Int(only_nodes))
print(final)
#print(only_nodes_int)
